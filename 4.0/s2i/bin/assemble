#!/bin/bash

set -e
echo
echo "---> Build started at $(date)"
echo
START=$SECONDS

function git_packages_init() {
	git config --global user.email "nobody@nowhere.com"
	git config --global user.name "Nobody"
	for D in LocalPackages/*; do
		echo "   ... setting up local dependency $D"
		pushd $D
		git init
		git add .
		git commit -m "auto-created repo for local swift package"
		git tag 1.0.0
		popd
	done
}

# Unconditionally print elapsed build time at exit
function finish {
  echo "===> Elapsed time: $(($SECONDS - $START)) seconds"
}
trap finish EXIT

echo "PWD is ${PWD}"

# By default the s2i build places the application source in /tmp/src directory. 
# This directory is where the source and other assets will be placed for the build process. 
# You can modify this location by setting the io.openshift.s2i.destination label or passing --destination flag, 
# in which case the sources will be placed in the src subdirectory of the directory you specified. 
# The destination in the above command (./) is using WORKDIR (usually set in the FROM docker image), 
# which we specified in our Dockerfile, and which is set to be /opt/app-root/src.
echo "---> Preparing source..."
cp -Rf /tmp/src/. ./
cd ./
mkdir -p ../bin

echo "---> Compiling and installing application source..."
if [ -f Package.swift ]; then
	if [ -d LocalPackages ]; then
		echo "   ...  creating local nested package dependencies..."
		git_packages_init
	fi
	echo "   ... building as a Swift package based on Package.swift (DEBUG MODE)"
	swift build -v -c debug
	#echo "   ... building as a Swift package based on Package.swift (RELEASE MODE)"
	#swift build -v -c release
	cp -R ./.build/debug/* ../bin
	find ./.build/debug -maxdepth 1 -type f -executable | while read line; do
		echo "   ... copying EXEC to run dir: ${line}"
		cp ${line} ../bin/app
	done
else
	echo "   ... building as flat swift files and outputting as an executable named app"
	swiftc *.swift $EXTRA_COMPILE_OPTIONS -v -o ../bin/app
fi

echo "---> Build completed at $(date)"

# TODO: Fix source directory permissions?
# TODO: support for release mode
